{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LP\\\\Documents\\\\Personal Website\\\\src\\\\components\\\\pages\\\\project pages\\\\Atera2Autotask.js\";\nimport React from 'react';\nimport '../../../App.css';\nexport default function Atera2Autotask() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }, \"Atera2Autotask\"), /*#__PURE__*/React.createElement(\"p1\", {\n    className: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, \"Atera2Autotask is a web based application that uses REST APIs to gather data from an agent, Atera, and push the data to Autotask's database. I developed this application for TNTechnologies, an RMM* IT consultant company. We provide support and management of businesses IT solutions. We aquired a new PSA* software, Autotask, which will assist helpdesk employees in scheduling tickets. One issue arised, autotask has no agent*, which means we had to manually insert all network information for a given client. This is where I stepped in.\"), /*#__PURE__*/React.createElement(\"p2\", {\n    className: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"We had already have an agent installed on customers machines. Atera is RMM software to help automate certain IT tasks. In addition, Atera provides a REST API to collect data from a network. The data that is gathered is as follows: Machine name, IP Address, MAC address, domain name, OS name, OS version, Machine Manufacturer, Machine Model etc.\"), /*#__PURE__*/React.createElement(\"p3\", {\n    className: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Fortunately, although Autotask did not come with an agent to easily gather information, they did also provide a REST API to insert data into the database. Both services provided excellent developer documentation on the functions for their APIs, and I was able to construct a javascript based web application that works as follows. First a list of clients is shown on the screen, then the user can select a client and will be presented with a list of machines. The user can then select a machine, and all data for selected machines will be pushed into Autotask, in the proper client group.\", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"Atera2Autotask.png\",\n    alt: \"Drifting\",\n    className: \"imgsSmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"p3\", {\n    className: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"The biggest challange in this project involved manipulating the data to work for different objects in Autotask. Atera sorted all of the data into two objects, \\\"workstation\\\" and \\\"client\\\", however autotask had many different objects. While they did have workstation and clients, autotask also had a seperate object to track model and make number for an individual machine. So I had to implement the push request in the following steps. First, check for existing client. If client does not exist, create it. If the does exist, use the proper client ID to initiate the proper requests. This step is repeated for machine make and model. Then once this is done, it can finally insert a workstation, in the proper group, with the proper system information in place, with the proper make and model object attached. Autotask will now let our staff know the exact make and model of the computer they are providing support on, as well as other useful workstation information to provide remote IT support.\", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"Atera2Autotask.png\",\n    alt: \"Drifting\",\n    className: \"imgsSmall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }))));\n}\n_c = Atera2Autotask;\n\nvar _c;\n\n$RefreshReg$(_c, \"Atera2Autotask\");","map":{"version":3,"sources":["C:/Users/LP/Documents/Personal Website/src/components/pages/project pages/Atera2Autotask.js"],"names":["React","Atera2Autotask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,cAAT,GAAyB;AACpC,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,giBAFJ,eAUI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gWAVJ,eAeI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kmBAKQ;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,UAAlC;AAA6C,IAAA,SAAS,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CAfJ,eAsBI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2/BAOQ;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,UAAlC;AAA6C,IAAA,SAAS,EAAC,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CAtBJ,CADJ,CADJ;AAqCH;KAtCuBA,c","sourcesContent":["import React from 'react'\r\nimport '../../../App.css'\r\n\r\nexport default function Atera2Autotask(){\r\n    return (\r\n        <div className='container'>\r\n            <div>\r\n                <h1 className='about-me'>Atera2Autotask</h1>\r\n                <p1 className='paragraph'>Atera2Autotask is a web based application that uses REST APIs to gather data from an agent, Atera, and push the data\r\n                to Autotask's database. I developed this application for TNTechnologies, an RMM* IT consultant company. We provide\r\n                support and management of businesses IT solutions. We aquired a new PSA* software, Autotask, which will assist helpdesk employees in scheduling tickets.\r\n                One issue arised, autotask has no agent*, which means we had to manually insert all network information for a given client. This is where I stepped in.\r\n                    \r\n                    \r\n                </p1>\r\n                \r\n                <p2 className='paragraph'>\r\n                        We had already have an agent installed on customers machines. Atera is RMM software to help automate certain IT tasks. In addition, Atera provides\r\n                        a REST API to collect data from a network. The data that is gathered is as follows:\r\n                        Machine name, IP Address, MAC address, domain name, OS name, OS version, Machine Manufacturer, Machine Model etc.  \r\n                </p2>\r\n                <p3 className='paragraph'>\r\n                    Fortunately, although Autotask did not come with an agent to easily gather information, they did also provide a REST API to insert data into the database.\r\n                    Both services provided excellent developer documentation on the functions for their APIs, and I was able to construct a javascript based web application\r\n                    that works as follows. First a list of clients is shown on the screen, then the user can select a client and will be presented with a list of machines. \r\n                    The user can then select a machine, and all data for selected machines will be pushed into Autotask, in the proper client group.\r\n                        <img src=\"Atera2Autotask.png\" alt=\"Drifting\" className=\"imgsSmall\"/>\r\n                </p3>\r\n                <p3 className='paragraph'>\r\n                    The biggest challange in this project involved manipulating the data to work for different objects in Autotask. Atera sorted all of the data into two objects, \r\n                    \"workstation\" and \"client\", however autotask had many different objects. While they did have workstation and clients, autotask also had a seperate object to track\r\n                    model and make number for an individual machine. So I had to implement the push request in the following steps. First, check for existing client. If client does not exist, \r\n                    create it. If the does exist, use the proper client ID to initiate the proper requests. This step is repeated for machine make and model. Then once this is done,\r\n                    it can finally insert a workstation, in the proper group, with the proper system information in place, with the proper make and model object attached. Autotask will \r\n                    now let our staff know the exact make and model of the computer they are providing support on, as well as other useful workstation information to provide remote IT support. \r\n                        <img src=\"Atera2Autotask.png\" alt=\"Drifting\" className=\"imgsSmall\"/>\r\n                </p3>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}